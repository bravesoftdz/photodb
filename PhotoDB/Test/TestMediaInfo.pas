unit TestMediaInfo;

interface

uses
  TestFramework,

  Generics.Collections,
  System.Math,
  System.SysUtils,
  System.Classes,  
  Vcl.Forms,
  Vcl.Graphics,
  Vcl.Imaging.Jpeg,
  Data.DB,

  Dmitry.CRC32,
  Dmitry.Graphics.Types,

  UnitDBCommon,
  GraphicCrypt,

  uLogger,
  uConstants,
  uMemory,
  uRuntime,
  uBitmapUtils,
  uJpegUtils,
  uGraphicUtils,
  uDBContext,
  uDBConnection,
  uDBAdapter,
  uSettings,
  uDBBaseTypes,
  uSessionPasswords,
  UnitLinksSupport,
  uCDMappingTypes,
  uRAWImage,
  uDBEntities,
  uMediaInfo;

type
  TTestMediaInfo = class(TTestCase)
  strict private
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestUniqueImageId;
  end;

implementation

procedure TTestMediaInfo.SetUp;
begin
  FailsOnMemoryLeak := True;
  FailsOnMemoryRecovery := True;
end;

procedure TTestMediaInfo.TearDown;
begin
end;

procedure TTestMediaInfo.TestUniqueImageId;
const
  PreviewSize: Integer = 200;
  JpegQuality: TJPEGQualityRange = 75;

const
  ValidImgThs: array[0..7] of string = (
  '62D64A52420E318C41CE18C620C62948290829085AD483DE529439CE4A10318C398C420E4A10314A5A94A4A45A945A9420C84A1062D65A524A5221084A508C20420E5AD4108441CE63186294318C2108398C5AD46'+'2D66B1810845A925A52318A318C18C6294A41CE5A946316084252925A524A0E210810822908290820C641CE314A41CC49CC49CE314A20C62108398C318A5AD4525241CE314A398C4A0E2108010141CC41CC5A945A5062D45A9273146AD2398C294A210841CC5A4E83567B147B56835662927316',
  'CD1CCD1CCD1CCD1CB416C4DCA394CC9ABC5892CEABD4ABD4B414B416BC58D4DE9B10C49ACD1CB3D48A8E8ACE8A8E8A8EB3D8E5A6AB94C458BB94C49A908490C490C490C4A20CCCA0B41AC45ACC9CCC9C980098009'+'80098009084BBD86A504A12CD20CC5A90009844A94ABA929B9A314A314C631AB49EC458A108CC9EDDA4E62AA4A020CA835AD6B2EEF0DDE8BC9CB456BC9CD5E8DE6E9CA6E66CF732F732EEF0A3D6D562BCDEF732EEF0DDEAF6F0F6F0E628DDE4C566CDA4D5E8E66CDE2AE6AEE66CDE28D5A4C564',
  'CD1CCD1CCD1CCD1CAC16C4DCA394CC9AB4588ACEABD4ABD4AC14B416BC56CCDE9B10C49ACCDCB3D48A8E8ACE8A8E8A8EB3D8E5A6AB94C458BB94C49A9084908490C490C4A20CCC9EB41AC45ACCDCCC9A980098009'+'80098009084BBD862504A12CD1EC45A90009884A148BA929B98314A294C631AB49EC4589948CC9ED5A4E62AA4A020CA835AD6B2EEF0DDE8BC9AB456BCDCD5E6DE6E9CA6E66CF732F732EEF0A3D6D560BCDEF732EEF0DDEAF6EEF6F0E628D5E4C566CDA4D5E8DE6CD62AE6AEDE6CDE28CDA4C562',
  '525462D8731E8BE28BE483A27B606ADA4A1421085A566ADA7B5E8BE29C66942483E26B1C5254398E5A566ADA7B5E8BE29C66A4A68BE2731C5A5639905A566ADA7B5E8BE2A4A6ACE89424735C5A5639D05A566ADA7'+'B5C8BE2A4A6ACA893E2731C5254398E525462D8731C83A09C649C24839E6AD84A12318E521262966ADA7B5C8BA0839E731A629649D0314C4A125A546AD8731A7B1C731A6AD85A5441D0314A41D0521262566A986AD86A985A5449D0398C290A314A418E52125A5462945A545210498E394A3108',
  '84208420842083DE7BDE842084208420842084208420842084207BDE62D07BDC84208420842084208420842083DE630A63026B887BDE7BDE842084208420842083DE5B046B44738873927BDE84208420842084207'+'3985B046B8473C673887BD684208420842084205B0E630473C67BC873C86B86842084208420842052865B046B8473C673866342841E8420842084205AC85AC263026B44634263468420842084208420739852845AC2630263047396842084208420842084207BDC6B526B527BDC842084208420',
  '6AD2B522BD64BDA6C5E8A49CB522B52483DC52507354B524BD64BD66BD649C1AB520B524839A4A108396B522BD649C5C839672D2418A945E524E29082906A4A0ACE07B9649C85A4E7B569C607316629210427B987'+'2CC624839463988520A41885A9273584906498849884A0A5A90398A1882398AB5269CA23904414673125A928C1E7B98398C6B16B524ACE218825A0C9C5A6AD29CA6B524A4A0BD648C1C8BDA20C4418649886AD09C5EACE2B522A49E7B9662D241885A4C5A0A5A4AAC9EA49C8BDA629062D25A90',
  '842063188C607B9CA528AD6AC632C630C630BDEE5AD66B5A9CE67BDC739CB5ACCE72C632C630BDF05AD66318739A7BDCAD6AC630CE72CE72C630BDF0739C9CE68C627BDCCE72C630CE72CE72C630BDF05AD6739C6'+'B587B9CCE30CE30CE32CE72C630BDF052925AD44A525AD49CE6BDEEB56CCE72C630BDF0318C4210420E39CE414A7A96B56AC630C630BDF021084210420E39CC498C7B1A9C62C630C630BDF039CE4210421042104A5294A4BDEEBDEEC630BDEE294A5AD64A92631852D48C20BDEEBDEEC630B5EE',
  'FFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEDEF6D6B4D'+'EF6EF7ABDEEDEF6C630B5ACFFFEFFFEB5ACA528B5ACBDEEA528A5289CE6AD6AFFFEFFFEBDEEB5ACAD6ABDEEB5ACA528A528AD6AFFFEFFFEB5ACA52894A4BDEEB5AC9CE6B5AC9CE6FFFEFFFEB5ACB5AC8C62BDEEBDEEA528BDEE9CE6FFFEFFFEBDEEBDEEB5ACAD6A9CE6BDEEA5289CE6FFFEFFFE');

var
  Files: TList<string>;
  FileName, S: string;
  I: Integer;
  MediaInfo: TMediaInfo;
begin
  Files := TList<string>.Create;
  try
    Files.Add('2.23 Harley 12x18-CMYK-In.jpg');
    Files.Add('IMG_2702_small.jpg');
    Files.Add('IMG_2702_small_обработка.bmp');
    Files.Add('IMG_9203.JPG');
    Files.Add('7b722bace9aece5ba93d37b5088c5792.png');
    Files.Add('P1010936.RW2');
    Files.Add('IMG_0404.JPG');
    Files.Add('PNG\5PRkW.png');

    for I := 0 to Files.Count - 1 do
    begin
      FileName := ExtractFileDir(ExtractFileDir(ExtractFileDir(ExtractFileDir(ExtractFileDir(Application.Exename))))) + '\Test Images\' + Files[I];
      MediaInfo := GenerateImageInfo(FileName, [iioPreview, iioColors], PreviewSize, JpegQuality);
      S := CodeExtID(MediaInfo.ImTh);
      S := DeCodeExtID(ValidImgThs[I]);
      if MediaInfo.ImTh <> S then
        raise Exception.Create('Invalid uniq id for image: ' + FileName + sLineBreak + 'Original: ' + S + sLineBreak + 'New: ' + MediaInfo.ImTh);
    end;
  finally
    F(Files);
  end;
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TTestMediaInfo.Suite);
end.

