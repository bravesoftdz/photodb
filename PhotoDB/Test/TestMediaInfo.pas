unit TestMediaInfo;

interface

uses
  TestFramework,

  Generics.Collections,
  System.Math,
  System.SysUtils,
  System.Classes,  
  Vcl.Forms,
  Vcl.Graphics,
  Vcl.Imaging.Jpeg,
  Data.DB,

  Dmitry.CRC32,
  Dmitry.Graphics.Types,

  UnitDBCommon,
  GraphicCrypt,

  uLogger,
  uConstants,
  uMemory,
  uRuntime,
  uBitmapUtils,
  uJpegUtils,
  uGraphicUtils,
  uDBContext,
  uDBConnection,
  uDBAdapter,
  uSettings,
  uDBBaseTypes,
  uSessionPasswords,
  UnitLinksSupport,
  uCDMappingTypes,
  uRAWImage,
  uDBEntities,
  uMediaInfo;

type
  TTestMediaInfo = class(TTestCase)
  strict private
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestUniqueImageId;
  end;

implementation

procedure TTestMediaInfo.SetUp;
begin
  FailsOnMemoryLeak := True;
  FailsOnMemoryRecovery := True;
end;

procedure TTestMediaInfo.TearDown;
begin
end;

procedure TTestMediaInfo.TestUniqueImageId;
const
  PreviewSize: Integer = 200;
  JpegQuality: TJPEGQualityRange = 75;

const
  ValidImgThs: array[0..7] of string = (
  '62D64A50420E318A41CE20C620C62908290829085AD483DC529239CC4A50318A398C41CE4A10314A5A949CA262D65A9421084A105AD452524A5221084A508C1E4A505A94108439CE63185A94398C2108398C5AD46'+'2D66B18108452525A52398C318C18C6294841CE5AD462D6108452925A524A0E210810422908294820C64A10294A41CC49CE4A0E314A18C62108398C318A5A945252420E318C398C4A0E2108010141CC41CE62D452505AD45A926AD26AD4398A294A210641CC5A4E7B5473147B16835662D27314',
  'CD1CCD1CCD1CCD1CAC16C49CA394CC9AB4588B0EAC14AC14B416B416BC58CCDE9B10C45ACD1CB3D48ACE8ACE8ACE8ACEB3D6E5A6A354C458BB94C49A90C490C490C49104A24CCC9EB41AC45ACC9ACCDC980098009'+'800980090C4BBDA72525212CD1ECC9A90009842A106B2509B58394A314C5A98AC9EC4189906CC1CD5A4E5E8ACA020C87B18D672E6B0DDE6BC9AB456BCDCD5E6DE6C9464E62AF732F732EEF0A416CD60BC9CF732EEF0DDEAEEEEEEF0E66ADDE6C564CD64D5E8E66CDE28E6AEE66CDE28D5A4C562',
  'CD1CCD1CCD1CCD1CAC16C49CA394C49AB4568ACEABD4AC14B414B416BC58CCDE9B10C45ACD1CB3D48ACC8ACE8ACE8ACEB3D6E5A6A354BC58BB94C49A90C490C490C490C4A24CCC9EB41ABC5ACC9ACCDA900098009'+'800980090C4BBD86A504A12CD1ECC5A90009842A108B2509398394A294C5AD8B49EC4589906C45CD5A4E5E8A4A020C87B18D6B2E6B0DDE6BC9AB456BCDCD5E6DE6C9464E62AF732F732EEF0A3D6CD60BC9CF732EEF0DDEAEEEEEEF0E668D5E4C564CD64D5E6E66CDE2AE6AEDE6CDE28CDA4C562',
  '525462D8731C8BE28BE283A07B9E6ADA4A1421085A566ADA7B5E8BE29C66942483E06B1C5254398E5A566ADA7B5E8BE29C66A4A68BE2731C5A56398E5A566ADA7B5E8BE2A4A6ACE89424735C5A9639D05A546AD87'+'B5C8BE2A4A6ACA89422731C5254398E525462D8731C83A09C649C2483A06AD84A12318E521262966ADA7B5C8BA0839E731C5A9649D0314C4A125A5462D8731A7B1C731A6AD85A5441D0314A41D0521262566A986AD86A985A5449D2398C290A314A41CE52105A5262945A525210498E394A2908',
  '8420842084207BDE7BDC842084208420842084208420842084207BDE62D07BDC84208420842084208420842083DE630C63046B887BDE7BDE84208420842084207BDE5AC66346738873927BDE8420842084207BDE7'+'3985B046B8673C8738873D67C1E84208420841E5B0E630473C67BC873C86B487BDE84208420842052885B046B8673886B8663447BDE84208420842052CA5AC463046344634463488420842084208420739852865AC45B045B047396842084208420842084207BDC6B526B527BDA842084208420',
  '6AD0AD22BD64BD66C5E8A49CB520B52483DC52507314B522BD64BD64BD649C1AB520B524839A4A108396ACE0BD649C5C8396731241CA945E525029482904A49EACE07B9649C85A4E7B569CA073165A9210827B967'+'2CC62483986398851CA41885A927358490441884988520A5A90398A1882398AB5249CA03904414672D25A928C1C7B98398C6B14AD24A4E218825A0C9C5A62D294A4B524A4A0B564941A8BDA20C4418649886AD09C5EACE0B522A49E7B96631239885A4C520A5A4AA49CA49C8BDA62D262D25A90',
  '842063188460739CA528AD6AC630C630C630BDEE63166B5A9CE47BDC739AB5ACCE72C632C630BDEE5B166358739A7BDCA528C62ECE72CE72C630BDF0739C94A48C607BDCCE30C630CE72CE72C630BDF05AD67BDC6'+'B5A7B9CC630C630CE32CE72C630BDF052925AD452525AD4A526BDEEB5ACCE32C630BDF0318A420E420E39CE498C7AD6B528C630C630BDF021084210420E39CC498C7B189C62C630C630BDEE39CE4210420E420E4A5294A4BDEEBDEEC630BDEE294A52944A525B1652D48420BDEEBDEEC5F0B5AE',
  'FFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEFFFEF7BCFFFEFFFEDEF6D6B4D'+'EF6E738BDEED6B4C630B5ACFFFEFFFEB5ACA528B5ACBDEEA528A5289CE6AD6AFFFEFFFEBDEEAD6AAD6ABDEEB5ACA528A528A528FFFEFFFEB5ACA52894A4BDEEB5AC9CE6B5AC9CE6FFFEFFFEB5ACB5AC8C62BDEEB5ACA528BDEE9CE6FFFEFFFEB5ACBDEEB5ACAD6A9CE6BDEEA5289CE6FFFEFFFE');

var
  Files: TList<string>;
  FileName, S: string;
  I: Integer;
  MediaInfo: TMediaInfo;
begin
  Files := TList<string>.Create;
  try
    Files.Add('2.23 Harley 12x18-CMYK-In.jpg');
    Files.Add('IMG_2702_small.jpg');
    Files.Add('IMG_2702_small_обработка.bmp');
    Files.Add('IMG_9203.JPG');
    Files.Add('7b722bace9aece5ba93d37b5088c5792.png');
    Files.Add('P1010936.RW2');
    Files.Add('IMG_0404.JPG');
    Files.Add('PNG\5PRkW.png');

    for I := 0 to Files.Count - 1 do
    begin
      FileName := ExtractFileDir(ExtractFileDir(ExtractFileDir(ExtractFileDir(ExtractFileDir(Application.Exename))))) + '\Test Images\' + Files[I];
      MediaInfo := GenerateImageInfo(FileName, [iioPreview, iioColors], PreviewSize, JpegQuality);
      //S := CodeExtID(MediaInfo.ImTh);
      S := DeCodeExtID(ValidImgThs[I]);
      if MediaInfo.ImTh <> S then
      //  raise Exception.Create('Invalid uniq id for image: ' + FileName + sLineBreak + 'Original: ' + S + sLineBreak + 'New: ' + MediaInfo.ImTh);
    end;
  finally
    F(Files);
  end;
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TTestMediaInfo.Suite);
end.

