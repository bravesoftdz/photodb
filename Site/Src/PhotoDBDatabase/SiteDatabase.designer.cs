#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PhotoDBDatabase
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PhotoDBSite")]
	public partial class SiteDatabaseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPageView(PageView instance);
    partial void UpdatePageView(PageView instance);
    partial void DeletePageView(PageView instance);
    partial void InsertRefer(Refer instance);
    partial void UpdateRefer(Refer instance);
    partial void DeleteRefer(Refer instance);
    partial void InsertContact(Contact instance);
    partial void UpdateContact(Contact instance);
    partial void DeleteContact(Contact instance);
    partial void InsertDownload(Download instance);
    partial void UpdateDownload(Download instance);
    partial void DeleteDownload(Download instance);
    partial void InsertHost(Host instance);
    partial void UpdateHost(Host instance);
    partial void DeleteHost(Host instance);
    partial void InsertActivation(Activation instance);
    partial void UpdateActivation(Activation instance);
    partial void DeleteActivation(Activation instance);
    #endregion
		
		public SiteDatabaseDataContext() : 
				base(global::PhotoDBDatabase.Properties.Settings.Default.PhotoDBSiteConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SiteDatabaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SiteDatabaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SiteDatabaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SiteDatabaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<PageView> PageViews
		{
			get
			{
				return this.GetTable<PageView>();
			}
		}
		
		public System.Data.Linq.Table<Refer> Refers
		{
			get
			{
				return this.GetTable<Refer>();
			}
		}
		
		public System.Data.Linq.Table<Contact> Contacts
		{
			get
			{
				return this.GetTable<Contact>();
			}
		}
		
		public System.Data.Linq.Table<Download> Downloads
		{
			get
			{
				return this.GetTable<Download>();
			}
		}
		
		public System.Data.Linq.Table<Host> Hosts
		{
			get
			{
				return this.GetTable<Host>();
			}
		}
		
		public System.Data.Linq.Table<Activation> Activations
		{
			get
			{
				return this.GetTable<Activation>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PageView")]
	public partial class PageView : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PageViewId;
		
		private int _PageId;
		
		private int _HostId;
		
		private System.DateTime _ViewDate;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPageViewIdChanging(int value);
    partial void OnPageViewIdChanged();
    partial void OnPageIdChanging(int value);
    partial void OnPageIdChanged();
    partial void OnHostIdChanging(int value);
    partial void OnHostIdChanged();
    partial void OnViewDateChanging(System.DateTime value);
    partial void OnViewDateChanged();
    #endregion
		
		public PageView()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageViewId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PageViewId
		{
			get
			{
				return this._PageViewId;
			}
			set
			{
				if ((this._PageViewId != value))
				{
					this.OnPageViewIdChanging(value);
					this.SendPropertyChanging();
					this._PageViewId = value;
					this.SendPropertyChanged("PageViewId");
					this.OnPageViewIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageId", DbType="Int NOT NULL")]
		public int PageId
		{
			get
			{
				return this._PageId;
			}
			set
			{
				if ((this._PageId != value))
				{
					this.OnPageIdChanging(value);
					this.SendPropertyChanging();
					this._PageId = value;
					this.SendPropertyChanged("PageId");
					this.OnPageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HostId", DbType="Int NOT NULL")]
		public int HostId
		{
			get
			{
				return this._HostId;
			}
			set
			{
				if ((this._HostId != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIdChanging(value);
					this.SendPropertyChanging();
					this._HostId = value;
					this.SendPropertyChanged("HostId");
					this.OnHostIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewDate", DbType="DateTime NOT NULL")]
		public System.DateTime ViewDate
		{
			get
			{
				return this._ViewDate;
			}
			set
			{
				if ((this._ViewDate != value))
				{
					this.OnViewDateChanging(value);
					this.SendPropertyChanging();
					this._ViewDate = value;
					this.SendPropertyChanged("ViewDate");
					this.OnViewDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Host_PageView", Storage="_Host", ThisKey="HostId", OtherKey="HostId", IsForeignKey=true)]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.PageViews.Remove(this);
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.PageViews.Add(this);
						this._HostId = value.HostId;
					}
					else
					{
						this._HostId = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Refer")]
	public partial class Refer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ReferId;
		
		private string _ReferUrl;
		
		private int _ReferCount;
		
		private System.DateTime _DateCreate;
		
		private System.DateTime _DateUpdate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReferIdChanging(int value);
    partial void OnReferIdChanged();
    partial void OnReferUrlChanging(string value);
    partial void OnReferUrlChanged();
    partial void OnReferCountChanging(int value);
    partial void OnReferCountChanged();
    partial void OnDateCreateChanging(System.DateTime value);
    partial void OnDateCreateChanged();
    partial void OnDateUpdateChanging(System.DateTime value);
    partial void OnDateUpdateChanged();
    #endregion
		
		public Refer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ReferId
		{
			get
			{
				return this._ReferId;
			}
			set
			{
				if ((this._ReferId != value))
				{
					this.OnReferIdChanging(value);
					this.SendPropertyChanging();
					this._ReferId = value;
					this.SendPropertyChanged("ReferId");
					this.OnReferIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferUrl", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string ReferUrl
		{
			get
			{
				return this._ReferUrl;
			}
			set
			{
				if ((this._ReferUrl != value))
				{
					this.OnReferUrlChanging(value);
					this.SendPropertyChanging();
					this._ReferUrl = value;
					this.SendPropertyChanged("ReferUrl");
					this.OnReferUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferCount", DbType="Int NOT NULL")]
		public int ReferCount
		{
			get
			{
				return this._ReferCount;
			}
			set
			{
				if ((this._ReferCount != value))
				{
					this.OnReferCountChanging(value);
					this.SendPropertyChanging();
					this._ReferCount = value;
					this.SendPropertyChanged("ReferCount");
					this.OnReferCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreate", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreate
		{
			get
			{
				return this._DateCreate;
			}
			set
			{
				if ((this._DateCreate != value))
				{
					this.OnDateCreateChanging(value);
					this.SendPropertyChanging();
					this._DateCreate = value;
					this.SendPropertyChanged("DateCreate");
					this.OnDateCreateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateUpdate", DbType="DateTime NOT NULL")]
		public System.DateTime DateUpdate
		{
			get
			{
				return this._DateUpdate;
			}
			set
			{
				if ((this._DateUpdate != value))
				{
					this.OnDateUpdateChanging(value);
					this.SendPropertyChanging();
					this._DateUpdate = value;
					this.SendPropertyChanged("DateUpdate");
					this.OnDateUpdateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contact")]
	public partial class Contact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ContactId;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Email;
		
		private string _Text;
		
		private string _ContactMode;
		
		private int _HostId;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContactIdChanging(int value);
    partial void OnContactIdChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnContactModeChanging(string value);
    partial void OnContactModeChanged();
    partial void OnHostIdChanging(int value);
    partial void OnHostIdChanged();
    #endregion
		
		public Contact()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ContactId
		{
			get
			{
				return this._ContactId;
			}
			set
			{
				if ((this._ContactId != value))
				{
					this.OnContactIdChanging(value);
					this.SendPropertyChanging();
					this._ContactId = value;
					this.SendPropertyChanged("ContactId");
					this.OnContactIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactMode", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string ContactMode
		{
			get
			{
				return this._ContactMode;
			}
			set
			{
				if ((this._ContactMode != value))
				{
					this.OnContactModeChanging(value);
					this.SendPropertyChanging();
					this._ContactMode = value;
					this.SendPropertyChanged("ContactMode");
					this.OnContactModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HostId", DbType="Int NOT NULL")]
		public int HostId
		{
			get
			{
				return this._HostId;
			}
			set
			{
				if ((this._HostId != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIdChanging(value);
					this.SendPropertyChanging();
					this._HostId = value;
					this.SendPropertyChanged("HostId");
					this.OnHostIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Host_Contact", Storage="_Host", ThisKey="HostId", OtherKey="HostId", IsForeignKey=true)]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.Contacts.Remove(this);
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.Contacts.Add(this);
						this._HostId = value.HostId;
					}
					else
					{
						this._HostId = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Download")]
	public partial class Download : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DownloadId;
		
		private int _DownloadPageId;
		
		private string _RequestedUrl;
		
		private int _MediaId;
		
		private string _DownloadUrl;
		
		private int _HostId;
		
		private int _ReferId;
		
		private System.DateTime _DownloadDate;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDownloadIdChanging(int value);
    partial void OnDownloadIdChanged();
    partial void OnDownloadPageIdChanging(int value);
    partial void OnDownloadPageIdChanged();
    partial void OnRequestedUrlChanging(string value);
    partial void OnRequestedUrlChanged();
    partial void OnMediaIdChanging(int value);
    partial void OnMediaIdChanged();
    partial void OnDownloadUrlChanging(string value);
    partial void OnDownloadUrlChanged();
    partial void OnHostIdChanging(int value);
    partial void OnHostIdChanged();
    partial void OnReferIdChanging(int value);
    partial void OnReferIdChanged();
    partial void OnDownloadDateChanging(System.DateTime value);
    partial void OnDownloadDateChanged();
    #endregion
		
		public Download()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DownloadId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DownloadId
		{
			get
			{
				return this._DownloadId;
			}
			set
			{
				if ((this._DownloadId != value))
				{
					this.OnDownloadIdChanging(value);
					this.SendPropertyChanging();
					this._DownloadId = value;
					this.SendPropertyChanged("DownloadId");
					this.OnDownloadIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DownloadPageId", DbType="Int NOT NULL")]
		public int DownloadPageId
		{
			get
			{
				return this._DownloadPageId;
			}
			set
			{
				if ((this._DownloadPageId != value))
				{
					this.OnDownloadPageIdChanging(value);
					this.SendPropertyChanging();
					this._DownloadPageId = value;
					this.SendPropertyChanged("DownloadPageId");
					this.OnDownloadPageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestedUrl", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string RequestedUrl
		{
			get
			{
				return this._RequestedUrl;
			}
			set
			{
				if ((this._RequestedUrl != value))
				{
					this.OnRequestedUrlChanging(value);
					this.SendPropertyChanging();
					this._RequestedUrl = value;
					this.SendPropertyChanged("RequestedUrl");
					this.OnRequestedUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MediaId", DbType="Int NOT NULL")]
		public int MediaId
		{
			get
			{
				return this._MediaId;
			}
			set
			{
				if ((this._MediaId != value))
				{
					this.OnMediaIdChanging(value);
					this.SendPropertyChanging();
					this._MediaId = value;
					this.SendPropertyChanged("MediaId");
					this.OnMediaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DownloadUrl", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string DownloadUrl
		{
			get
			{
				return this._DownloadUrl;
			}
			set
			{
				if ((this._DownloadUrl != value))
				{
					this.OnDownloadUrlChanging(value);
					this.SendPropertyChanging();
					this._DownloadUrl = value;
					this.SendPropertyChanged("DownloadUrl");
					this.OnDownloadUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HostId", DbType="Int NOT NULL")]
		public int HostId
		{
			get
			{
				return this._HostId;
			}
			set
			{
				if ((this._HostId != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIdChanging(value);
					this.SendPropertyChanging();
					this._HostId = value;
					this.SendPropertyChanged("HostId");
					this.OnHostIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferId", DbType="Int NOT NULL")]
		public int ReferId
		{
			get
			{
				return this._ReferId;
			}
			set
			{
				if ((this._ReferId != value))
				{
					this.OnReferIdChanging(value);
					this.SendPropertyChanging();
					this._ReferId = value;
					this.SendPropertyChanged("ReferId");
					this.OnReferIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DownloadDate", DbType="DateTime NOT NULL")]
		public System.DateTime DownloadDate
		{
			get
			{
				return this._DownloadDate;
			}
			set
			{
				if ((this._DownloadDate != value))
				{
					this.OnDownloadDateChanging(value);
					this.SendPropertyChanging();
					this._DownloadDate = value;
					this.SendPropertyChanged("DownloadDate");
					this.OnDownloadDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Host_Download", Storage="_Host", ThisKey="HostId", OtherKey="HostId", IsForeignKey=true)]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.Downloads.Remove(this);
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.Downloads.Add(this);
						this._HostId = value.HostId;
					}
					else
					{
						this._HostId = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Host")]
	public partial class Host : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HostId;
		
		private string _HostName;
		
		private string _HostDescription;
		
		private EntitySet<PageView> _PageViews;
		
		private EntitySet<Contact> _Contacts;
		
		private EntitySet<Download> _Downloads;
		
		private EntitySet<Activation> _Activations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHostIdChanging(int value);
    partial void OnHostIdChanged();
    partial void OnHostNameChanging(string value);
    partial void OnHostNameChanged();
    partial void OnHostDescriptionChanging(string value);
    partial void OnHostDescriptionChanged();
    #endregion
		
		public Host()
		{
			this._PageViews = new EntitySet<PageView>(new Action<PageView>(this.attach_PageViews), new Action<PageView>(this.detach_PageViews));
			this._Contacts = new EntitySet<Contact>(new Action<Contact>(this.attach_Contacts), new Action<Contact>(this.detach_Contacts));
			this._Downloads = new EntitySet<Download>(new Action<Download>(this.attach_Downloads), new Action<Download>(this.detach_Downloads));
			this._Activations = new EntitySet<Activation>(new Action<Activation>(this.attach_Activations), new Action<Activation>(this.detach_Activations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HostId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HostId
		{
			get
			{
				return this._HostId;
			}
			set
			{
				if ((this._HostId != value))
				{
					this.OnHostIdChanging(value);
					this.SendPropertyChanging();
					this._HostId = value;
					this.SendPropertyChanged("HostId");
					this.OnHostIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HostName", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string HostName
		{
			get
			{
				return this._HostName;
			}
			set
			{
				if ((this._HostName != value))
				{
					this.OnHostNameChanging(value);
					this.SendPropertyChanging();
					this._HostName = value;
					this.SendPropertyChanged("HostName");
					this.OnHostNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HostDescription", DbType="NChar(250) NOT NULL", CanBeNull=false)]
		public string HostDescription
		{
			get
			{
				return this._HostDescription;
			}
			set
			{
				if ((this._HostDescription != value))
				{
					this.OnHostDescriptionChanging(value);
					this.SendPropertyChanging();
					this._HostDescription = value;
					this.SendPropertyChanged("HostDescription");
					this.OnHostDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Host_PageView", Storage="_PageViews", ThisKey="HostId", OtherKey="HostId")]
		public EntitySet<PageView> PageViews
		{
			get
			{
				return this._PageViews;
			}
			set
			{
				this._PageViews.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Host_Contact", Storage="_Contacts", ThisKey="HostId", OtherKey="HostId")]
		public EntitySet<Contact> Contacts
		{
			get
			{
				return this._Contacts;
			}
			set
			{
				this._Contacts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Host_Download", Storage="_Downloads", ThisKey="HostId", OtherKey="HostId")]
		public EntitySet<Download> Downloads
		{
			get
			{
				return this._Downloads;
			}
			set
			{
				this._Downloads.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Host_Activation", Storage="_Activations", ThisKey="HostId", OtherKey="HostId")]
		public EntitySet<Activation> Activations
		{
			get
			{
				return this._Activations;
			}
			set
			{
				this._Activations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PageViews(PageView entity)
		{
			this.SendPropertyChanging();
			entity.Host = this;
		}
		
		private void detach_PageViews(PageView entity)
		{
			this.SendPropertyChanging();
			entity.Host = null;
		}
		
		private void attach_Contacts(Contact entity)
		{
			this.SendPropertyChanging();
			entity.Host = this;
		}
		
		private void detach_Contacts(Contact entity)
		{
			this.SendPropertyChanging();
			entity.Host = null;
		}
		
		private void attach_Downloads(Download entity)
		{
			this.SendPropertyChanging();
			entity.Host = this;
		}
		
		private void detach_Downloads(Download entity)
		{
			this.SendPropertyChanging();
			entity.Host = null;
		}
		
		private void attach_Activations(Activation entity)
		{
			this.SendPropertyChanging();
			entity.Host = this;
		}
		
		private void detach_Activations(Activation entity)
		{
			this.SendPropertyChanging();
			entity.Host = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Activation")]
	public partial class Activation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ActivationId;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Email;
		
		private string _Country;
		
		private string _City;
		
		private string _Address;
		
		private string _Phone;
		
		private string _ActivationMode;
		
		private string _ProgramCode;
		
		private string _ActivationCode;
		
		private System.DateTime _ActivationDate;
		
		private int _HostId;
		
		private string _ProgramVersion;
		
		private EntityRef<Host> _Host;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnActivationIdChanging(int value);
    partial void OnActivationIdChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnActivationModeChanging(string value);
    partial void OnActivationModeChanged();
    partial void OnProgramCodeChanging(string value);
    partial void OnProgramCodeChanged();
    partial void OnActivationCodeChanging(string value);
    partial void OnActivationCodeChanged();
    partial void OnActivationDateChanging(System.DateTime value);
    partial void OnActivationDateChanged();
    partial void OnHostIdChanging(int value);
    partial void OnHostIdChanged();
    partial void OnProgramVersionChanging(string value);
    partial void OnProgramVersionChanged();
    #endregion
		
		public Activation()
		{
			this._Host = default(EntityRef<Host>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivationId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ActivationId
		{
			get
			{
				return this._ActivationId;
			}
			set
			{
				if ((this._ActivationId != value))
				{
					this.OnActivationIdChanging(value);
					this.SendPropertyChanging();
					this._ActivationId = value;
					this.SendPropertyChanged("ActivationId");
					this.OnActivationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivationMode", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string ActivationMode
		{
			get
			{
				return this._ActivationMode;
			}
			set
			{
				if ((this._ActivationMode != value))
				{
					this.OnActivationModeChanging(value);
					this.SendPropertyChanging();
					this._ActivationMode = value;
					this.SendPropertyChanged("ActivationMode");
					this.OnActivationModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramCode", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ProgramCode
		{
			get
			{
				return this._ProgramCode;
			}
			set
			{
				if ((this._ProgramCode != value))
				{
					this.OnProgramCodeChanging(value);
					this.SendPropertyChanging();
					this._ProgramCode = value;
					this.SendPropertyChanged("ProgramCode");
					this.OnProgramCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivationCode", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ActivationCode
		{
			get
			{
				return this._ActivationCode;
			}
			set
			{
				if ((this._ActivationCode != value))
				{
					this.OnActivationCodeChanging(value);
					this.SendPropertyChanging();
					this._ActivationCode = value;
					this.SendPropertyChanged("ActivationCode");
					this.OnActivationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivationDate", DbType="DateTime NOT NULL")]
		public System.DateTime ActivationDate
		{
			get
			{
				return this._ActivationDate;
			}
			set
			{
				if ((this._ActivationDate != value))
				{
					this.OnActivationDateChanging(value);
					this.SendPropertyChanging();
					this._ActivationDate = value;
					this.SendPropertyChanged("ActivationDate");
					this.OnActivationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HostId", DbType="Int NOT NULL")]
		public int HostId
		{
			get
			{
				return this._HostId;
			}
			set
			{
				if ((this._HostId != value))
				{
					if (this._Host.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostIdChanging(value);
					this.SendPropertyChanging();
					this._HostId = value;
					this.SendPropertyChanged("HostId");
					this.OnHostIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramVersion", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string ProgramVersion
		{
			get
			{
				return this._ProgramVersion;
			}
			set
			{
				if ((this._ProgramVersion != value))
				{
					this.OnProgramVersionChanging(value);
					this.SendPropertyChanging();
					this._ProgramVersion = value;
					this.SendPropertyChanged("ProgramVersion");
					this.OnProgramVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Host_Activation", Storage="_Host", ThisKey="HostId", OtherKey="HostId", IsForeignKey=true)]
		public Host Host
		{
			get
			{
				return this._Host.Entity;
			}
			set
			{
				Host previousValue = this._Host.Entity;
				if (((previousValue != value) 
							|| (this._Host.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Host.Entity = null;
						previousValue.Activations.Remove(this);
					}
					this._Host.Entity = value;
					if ((value != null))
					{
						value.Activations.Add(this);
						this._HostId = value.HostId;
					}
					else
					{
						this._HostId = default(int);
					}
					this.SendPropertyChanged("Host");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
